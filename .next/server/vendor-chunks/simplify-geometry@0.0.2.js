/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/simplify-geometry@0.0.2";
exports.ids = ["vendor-chunks/simplify-geometry@0.0.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/index.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Line = __webpack_require__(/*! ./line */ \"(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js\");\n\nvar simplifyGeometry = function(points, tolerance){\n\n  var dmax = 0;\n  var index = 0;\n\n  for (var i = 1; i <= points.length - 2; i++){\n    var d = new Line(points[0], points[points.length - 1]).perpendicularDistance(points[i]);\n    if (d > dmax){\n      index = i;\n      dmax = d;\n    }\n  }\n\n  if (dmax > tolerance){\n    var results_one = simplifyGeometry(points.slice(0, index), tolerance);\n    var results_two = simplifyGeometry(points.slice(index, points.length), tolerance);\n\n    var results = results_one.concat(results_two);\n\n  }\n\n  else if (points.length > 1) {\n\n    results = [points[0], points[points.length - 1]];\n\n  }\n\n  else {\n\n    results = [points[0]];\n\n  }\n\n  return results;\n\n\n}\n\nmodule.exports = simplifyGeometry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ltcGxpZnktZ2VvbWV0cnlAMC4wLjIvbm9kZV9tb2R1bGVzL3NpbXBsaWZ5LWdlb21ldHJ5L2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsNkdBQVE7O0FBRTNCOztBQUVBO0FBQ0E7O0FBRUEsa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOzs7QUFHQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z5bmxhdGljcy1haS8uL25vZGVfbW9kdWxlcy8ucG5wbS9zaW1wbGlmeS1nZW9tZXRyeUAwLjAuMi9ub2RlX21vZHVsZXMvc2ltcGxpZnktZ2VvbWV0cnkvbGliL2luZGV4LmpzPzA0NGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpbmUgPSByZXF1aXJlKCcuL2xpbmUnKTtcblxudmFyIHNpbXBsaWZ5R2VvbWV0cnkgPSBmdW5jdGlvbihwb2ludHMsIHRvbGVyYW5jZSl7XG5cbiAgdmFyIGRtYXggPSAwO1xuICB2YXIgaW5kZXggPSAwO1xuXG4gIGZvciAodmFyIGkgPSAxOyBpIDw9IHBvaW50cy5sZW5ndGggLSAyOyBpKyspe1xuICAgIHZhciBkID0gbmV3IExpbmUocG9pbnRzWzBdLCBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdKS5wZXJwZW5kaWN1bGFyRGlzdGFuY2UocG9pbnRzW2ldKTtcbiAgICBpZiAoZCA+IGRtYXgpe1xuICAgICAgaW5kZXggPSBpO1xuICAgICAgZG1heCA9IGQ7XG4gICAgfVxuICB9XG5cbiAgaWYgKGRtYXggPiB0b2xlcmFuY2Upe1xuICAgIHZhciByZXN1bHRzX29uZSA9IHNpbXBsaWZ5R2VvbWV0cnkocG9pbnRzLnNsaWNlKDAsIGluZGV4KSwgdG9sZXJhbmNlKTtcbiAgICB2YXIgcmVzdWx0c190d28gPSBzaW1wbGlmeUdlb21ldHJ5KHBvaW50cy5zbGljZShpbmRleCwgcG9pbnRzLmxlbmd0aCksIHRvbGVyYW5jZSk7XG5cbiAgICB2YXIgcmVzdWx0cyA9IHJlc3VsdHNfb25lLmNvbmNhdChyZXN1bHRzX3R3byk7XG5cbiAgfVxuXG4gIGVsc2UgaWYgKHBvaW50cy5sZW5ndGggPiAxKSB7XG5cbiAgICByZXN1bHRzID0gW3BvaW50c1swXSwgcG9pbnRzW3BvaW50cy5sZW5ndGggLSAxXV07XG5cbiAgfVxuXG4gIGVsc2Uge1xuXG4gICAgcmVzdWx0cyA9IFtwb2ludHNbMF1dO1xuXG4gIH1cblxuICByZXR1cm4gcmVzdWx0cztcblxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2ltcGxpZnlHZW9tZXRyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js ***!
  \***********************************************************************************************/
/***/ ((module) => {

eval("var Line = function(p1, p2){\n\n  this.p1 = p1;\n  this.p2 = p2;\n\n};\n\nLine.prototype.rise = function() {\n\n  return this.p2[1] - this.p1[1];\n\n};\n\nLine.prototype.run = function() {\n\n  return this.p2[0] - this.p1[0];\n\n};\n\nLine.prototype.slope = function(){\n\n  return  this.rise() / this.run();\n\n};\n\nLine.prototype.yIntercept = function(){\n\n  return this.p1[1] - (this.p1[0] * this.slope(this.p1, this.p2));\n\n};\n\nLine.prototype.isVertical = function() {\n\n  return !isFinite(this.slope());\n\n};\n\nLine.prototype.isHorizontal = function() {\n\n  return this.p1[1] == this.p2[1];\n\n};\n\nLine.prototype._perpendicularDistanceHorizontal = function(point){\n\n  return Math.abs(this.p1[1] - point[1]);\n\n};\n\nLine.prototype._perpendicularDistanceVertical = function(point){\n\n  return Math.abs(this.p1[0] - point[0]);\n\n};\n\nLine.prototype._perpendicularDistanceHasSlope = function(point){\n  var slope = this.slope();\n  var y_intercept = this.yIntercept();\n\n  return Math.abs((slope * point[0]) - point[1] + y_intercept) / Math.sqrt((Math.pow(slope, 2)) + 1);\n\n};\n\nLine.prototype.perpendicularDistance = function(point){\n  if (this.isVertical()) {\n\n    return this._perpendicularDistanceVertical(point);\n\n  }\n\n  else if (this.isHorizontal()){\n\n    return this._perpendicularDistanceHorizontal(point);\n\n  }\n\n  else {\n\n    return this._perpendicularDistanceHasSlope(point);\n\n  }\n\n};\n\nmodule.exports = Line;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ltcGxpZnktZ2VvbWV0cnlAMC4wLjIvbm9kZV9tb2R1bGVzL3NpbXBsaWZ5LWdlb21ldHJ5L2xpYi9saW5lLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9meW5sYXRpY3MtYWkvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ltcGxpZnktZ2VvbWV0cnlAMC4wLjIvbm9kZV9tb2R1bGVzL3NpbXBsaWZ5LWdlb21ldHJ5L2xpYi9saW5lLmpzPzA1NjciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpbmUgPSBmdW5jdGlvbihwMSwgcDIpe1xuXG4gIHRoaXMucDEgPSBwMTtcbiAgdGhpcy5wMiA9IHAyO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5yaXNlID0gZnVuY3Rpb24oKSB7XG5cbiAgcmV0dXJuIHRoaXMucDJbMV0gLSB0aGlzLnAxWzFdO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbigpIHtcblxuICByZXR1cm4gdGhpcy5wMlswXSAtIHRoaXMucDFbMF07XG5cbn07XG5cbkxpbmUucHJvdG90eXBlLnNsb3BlID0gZnVuY3Rpb24oKXtcblxuICByZXR1cm4gIHRoaXMucmlzZSgpIC8gdGhpcy5ydW4oKTtcblxufTtcblxuTGluZS5wcm90b3R5cGUueUludGVyY2VwdCA9IGZ1bmN0aW9uKCl7XG5cbiAgcmV0dXJuIHRoaXMucDFbMV0gLSAodGhpcy5wMVswXSAqIHRoaXMuc2xvcGUodGhpcy5wMSwgdGhpcy5wMikpO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5pc1ZlcnRpY2FsID0gZnVuY3Rpb24oKSB7XG5cbiAgcmV0dXJuICFpc0Zpbml0ZSh0aGlzLnNsb3BlKCkpO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5pc0hvcml6b250YWwgPSBmdW5jdGlvbigpIHtcblxuICByZXR1cm4gdGhpcy5wMVsxXSA9PSB0aGlzLnAyWzFdO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5fcGVycGVuZGljdWxhckRpc3RhbmNlSG9yaXpvbnRhbCA9IGZ1bmN0aW9uKHBvaW50KXtcblxuICByZXR1cm4gTWF0aC5hYnModGhpcy5wMVsxXSAtIHBvaW50WzFdKTtcblxufTtcblxuTGluZS5wcm90b3R5cGUuX3BlcnBlbmRpY3VsYXJEaXN0YW5jZVZlcnRpY2FsID0gZnVuY3Rpb24ocG9pbnQpe1xuXG4gIHJldHVybiBNYXRoLmFicyh0aGlzLnAxWzBdIC0gcG9pbnRbMF0pO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5fcGVycGVuZGljdWxhckRpc3RhbmNlSGFzU2xvcGUgPSBmdW5jdGlvbihwb2ludCl7XG4gIHZhciBzbG9wZSA9IHRoaXMuc2xvcGUoKTtcbiAgdmFyIHlfaW50ZXJjZXB0ID0gdGhpcy55SW50ZXJjZXB0KCk7XG5cbiAgcmV0dXJuIE1hdGguYWJzKChzbG9wZSAqIHBvaW50WzBdKSAtIHBvaW50WzFdICsgeV9pbnRlcmNlcHQpIC8gTWF0aC5zcXJ0KChNYXRoLnBvdyhzbG9wZSwgMikpICsgMSk7XG5cbn07XG5cbkxpbmUucHJvdG90eXBlLnBlcnBlbmRpY3VsYXJEaXN0YW5jZSA9IGZ1bmN0aW9uKHBvaW50KXtcbiAgaWYgKHRoaXMuaXNWZXJ0aWNhbCgpKSB7XG5cbiAgICByZXR1cm4gdGhpcy5fcGVycGVuZGljdWxhckRpc3RhbmNlVmVydGljYWwocG9pbnQpO1xuXG4gIH1cblxuICBlbHNlIGlmICh0aGlzLmlzSG9yaXpvbnRhbCgpKXtcblxuICAgIHJldHVybiB0aGlzLl9wZXJwZW5kaWN1bGFyRGlzdGFuY2VIb3Jpem9udGFsKHBvaW50KTtcblxuICB9XG5cbiAgZWxzZSB7XG5cbiAgICByZXR1cm4gdGhpcy5fcGVycGVuZGljdWxhckRpc3RhbmNlSGFzU2xvcGUocG9pbnQpO1xuXG4gIH1cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBMaW5lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js\n");

/***/ })

};
;