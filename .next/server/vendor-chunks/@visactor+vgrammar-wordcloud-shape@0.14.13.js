"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@visactor+vgrammar-wordcloud-shape@0.14.13";
exports.ids = ["vendor-chunks/@visactor+vgrammar-wordcloud-shape@0.14.13"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/cloud-shape-layout.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/cloud-shape-layout.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _segmentation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./segmentation */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/segmentation.js\");\n/* harmony import */ var _wordle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wordle */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordle.js\");\n/* harmony import */ var _filling__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filling */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/filling.js\");\n\n\n\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(words, layoutConfig, segmentationOutput) {\n    (0,_segmentation__WEBPACK_IMPORTED_MODULE_0__.allocateWords)(words, segmentationOutput), \"ensureMapping\" === layoutConfig.layoutMode ? (0,_wordle__WEBPACK_IMPORTED_MODULE_1__.layoutGlobalShrink)(words, layoutConfig, segmentationOutput) : \"ensureMappingEnlarge\" === layoutConfig.layoutMode ? (0,_wordle__WEBPACK_IMPORTED_MODULE_1__.layoutSelfEnlarge)(words, layoutConfig, segmentationOutput) : (0,_wordle__WEBPACK_IMPORTED_MODULE_1__.layout)(words, layoutConfig, segmentationOutput);\n    const fillingWords = (0,_filling__WEBPACK_IMPORTED_MODULE_2__.filling)(words, layoutConfig, segmentationOutput), failedWords = [], successedWords = [];\n    for (let i = 0; i < words.length; i++) words[i].hasPlaced ? successedWords.push(words[i]) : failedWords.push(words[i]);\n    return failedWords.forEach((word => word.visible = !1)), {\n        fillingWords: fillingWords,\n        successedWords: successedWords,\n        failedWords: failedWords\n    };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXdvcmRjbG91ZC1zaGFwZUAwLjE0LjEzL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlL2VzL2Nsb3VkLXNoYXBlLWxheW91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStDOztBQUUwQjs7QUFFckM7O0FBRXBDLDZCQUFlLG9DQUFTO0FBQ3hCLElBQUksNERBQWEsMkVBQTJFLDJEQUFrQixpR0FBaUcsMERBQWlCLDRDQUE0QywrQ0FBTTtBQUNsUix5QkFBeUIsaURBQU87QUFDaEMsb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9meW5sYXRpY3MtYWkvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXdvcmRjbG91ZC1zaGFwZUAwLjE0LjEzL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlL2VzL2Nsb3VkLXNoYXBlLWxheW91dC5qcz9lNzIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFsbG9jYXRlV29yZHMgfSBmcm9tIFwiLi9zZWdtZW50YXRpb25cIjtcblxuaW1wb3J0IHsgbGF5b3V0LCBsYXlvdXRHbG9iYWxTaHJpbmssIGxheW91dFNlbGZFbmxhcmdlIH0gZnJvbSBcIi4vd29yZGxlXCI7XG5cbmltcG9ydCB7IGZpbGxpbmcgfSBmcm9tIFwiLi9maWxsaW5nXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHdvcmRzLCBsYXlvdXRDb25maWcsIHNlZ21lbnRhdGlvbk91dHB1dCkge1xuICAgIGFsbG9jYXRlV29yZHMod29yZHMsIHNlZ21lbnRhdGlvbk91dHB1dCksIFwiZW5zdXJlTWFwcGluZ1wiID09PSBsYXlvdXRDb25maWcubGF5b3V0TW9kZSA/IGxheW91dEdsb2JhbFNocmluayh3b3JkcywgbGF5b3V0Q29uZmlnLCBzZWdtZW50YXRpb25PdXRwdXQpIDogXCJlbnN1cmVNYXBwaW5nRW5sYXJnZVwiID09PSBsYXlvdXRDb25maWcubGF5b3V0TW9kZSA/IGxheW91dFNlbGZFbmxhcmdlKHdvcmRzLCBsYXlvdXRDb25maWcsIHNlZ21lbnRhdGlvbk91dHB1dCkgOiBsYXlvdXQod29yZHMsIGxheW91dENvbmZpZywgc2VnbWVudGF0aW9uT3V0cHV0KTtcbiAgICBjb25zdCBmaWxsaW5nV29yZHMgPSBmaWxsaW5nKHdvcmRzLCBsYXlvdXRDb25maWcsIHNlZ21lbnRhdGlvbk91dHB1dCksIGZhaWxlZFdvcmRzID0gW10sIHN1Y2Nlc3NlZFdvcmRzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB3b3Jkcy5sZW5ndGg7IGkrKykgd29yZHNbaV0uaGFzUGxhY2VkID8gc3VjY2Vzc2VkV29yZHMucHVzaCh3b3Jkc1tpXSkgOiBmYWlsZWRXb3Jkcy5wdXNoKHdvcmRzW2ldKTtcbiAgICByZXR1cm4gZmFpbGVkV29yZHMuZm9yRWFjaCgod29yZCA9PiB3b3JkLnZpc2libGUgPSAhMSkpLCB7XG4gICAgICAgIGZpbGxpbmdXb3JkczogZmlsbGluZ1dvcmRzLFxuICAgICAgICBzdWNjZXNzZWRXb3Jkczogc3VjY2Vzc2VkV29yZHMsXG4gICAgICAgIGZhaWxlZFdvcmRzOiBmYWlsZWRXb3Jkc1xuICAgIH07XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/cloud-shape-layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/filling.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/filling.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filling: () => (/* binding */ filling)\n/* harmony export */ });\n/* harmony import */ var _wordle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wordle */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordle.js\");\n\n\nfunction filling(words, layoutConfig, segmentationOutput) {\n    const {size: size, fillingTimes: fillingTimes, fillingXStep: fillingXStep, fillingYStep: fillingYStep, getFillingFontStyle: getFillingFontStyle, getFillingFontWeight: getFillingFontWeight, getFillingFontFamily: getFillingFontFamily, fillingInitialFontSize: fillingInitialFontSize, fillingDeltaFontSize: fillingDeltaFontSize, fillingInitialOpacity: fillingInitialOpacity, fillingDeltaOpacity: fillingDeltaOpacity, fillingRotateList: fillingRotateList, getFillingPadding: getFillingPadding, random: random, board: board, minFillFontSize: minFillFontSize} = layoutConfig, {boardSize: boardSize, shapeBounds: shapeBounds, tempCanvas: canvas, randomGenerator: randomGenerator} = segmentationOutput, ctx = canvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    });\n    let fontSize = fillingInitialFontSize, opacity = fillingInitialOpacity;\n    const placedFillingWords = [];\n    for (let i = 0; i < fillingTimes; i++) filling1Time(fontSize, opacity), fontSize = Math.max(fontSize > fillingDeltaFontSize ? fontSize - fillingDeltaFontSize : fillingDeltaFontSize, minFillFontSize), \n    opacity = opacity > fillingDeltaOpacity ? opacity - fillingDeltaOpacity : fillingDeltaOpacity;\n    return placedFillingWords;\n    function filling1Time(fontSize, opacity) {\n        const fillingWords = words.map((word => {\n            const {text: text, color: color, fillingColor: fillingColor, hasPlaced: hasPlaced, datum: datum} = word;\n            return {\n                x: 0,\n                y: 0,\n                weight: 0,\n                text: text,\n                fontFamily: getFillingFontFamily(datum),\n                fontStyle: getFillingFontStyle(datum),\n                fontWeight: getFillingFontWeight(datum),\n                fontSize: fontSize,\n                rotate: fillingRotateList[~~(randomGenerator() * fillingRotateList.length)],\n                padding: getFillingPadding(datum),\n                opacity: opacity,\n                visible: !0,\n                color: color,\n                fillingColor: fillingColor,\n                hasPlaced: hasPlaced,\n                datum: datum\n            };\n        }));\n        randomArray(fillingWords);\n        let wi = 0;\n        const {x1: x1, y1: y1, x2: x2, y2: y2} = shapeBounds, [startX, startY] = [ x1 + ~~(randomGenerator() * fillingXStep * 2), y1 + ~~(randomGenerator() * fillingYStep * 2) ];\n        for (let y = startY; y <= y2; y += fillingYStep) for (let x = startX; x <= x2; x += fillingXStep) {\n            (0,_wordle__WEBPACK_IMPORTED_MODULE_0__.measureSprite)(canvas, ctx, fillingWords, wi);\n            const word = fillingWords[wi];\n            word.x = x, word.y = y;\n            const {wordSize: wordSize, bounds: bounds, hasPlaced: hasPlaced} = word;\n            if (!hasPlaced || !bounds) {\n                ++wi === fillingWords.length && (wi = 0, random && randomArray(fillingWords));\n                continue;\n            }\n            const {dTop: dTop, dBottom: dBottom, dLeft: dLeft, dRight: dRight} = bounds;\n            word.x - dLeft < 0 || word.x + dRight > size[0] || word.y - dTop < 0 || word.y + dBottom > size[1] || word.hasText && word.sprite && !(0,_wordle__WEBPACK_IMPORTED_MODULE_0__.isCollideWithBoard)(word, board, boardSize) && ((0,_wordle__WEBPACK_IMPORTED_MODULE_0__.placeWordOnBoard)(word, board, boardSize), \n            placedFillingWords.push(Object.assign({}, word)), ++wi === fillingWords.length && (wi = 0, \n            random && randomArray(fillingWords)));\n        }\n    }\n    function randomArray(words) {\n        return words.sort((() => randomGenerator() - .5));\n    }\n}\n//# sourceMappingURL=filling.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXdvcmRjbG91ZC1zaGFwZUAwLjE0LjEzL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlL2VzL2ZpbGxpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0U7O0FBRXhFO0FBQ1AsV0FBVyxraUJBQWtpQixpQkFBaUIsc0dBQXNHO0FBQ3BxQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwwRkFBMEY7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxlQUFlLGdDQUFnQztBQUMvQyw2QkFBNkIsU0FBUyx3Q0FBd0MsU0FBUztBQUN2RixZQUFZLHNEQUFhO0FBQ3pCO0FBQ0E7QUFDQSxtQkFBbUIsMERBQTBEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUE0RDtBQUMvRSxrSkFBa0osMkRBQWtCLDZCQUE2Qix5REFBZ0I7QUFDak4sb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9meW5sYXRpY3MtYWkvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXdvcmRjbG91ZC1zaGFwZUAwLjE0LjEzL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlL2VzL2ZpbGxpbmcuanM/NDQyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZWFzdXJlU3ByaXRlLCBpc0NvbGxpZGVXaXRoQm9hcmQsIHBsYWNlV29yZE9uQm9hcmQgfSBmcm9tIFwiLi93b3JkbGVcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZpbGxpbmcod29yZHMsIGxheW91dENvbmZpZywgc2VnbWVudGF0aW9uT3V0cHV0KSB7XG4gICAgY29uc3Qge3NpemU6IHNpemUsIGZpbGxpbmdUaW1lczogZmlsbGluZ1RpbWVzLCBmaWxsaW5nWFN0ZXA6IGZpbGxpbmdYU3RlcCwgZmlsbGluZ1lTdGVwOiBmaWxsaW5nWVN0ZXAsIGdldEZpbGxpbmdGb250U3R5bGU6IGdldEZpbGxpbmdGb250U3R5bGUsIGdldEZpbGxpbmdGb250V2VpZ2h0OiBnZXRGaWxsaW5nRm9udFdlaWdodCwgZ2V0RmlsbGluZ0ZvbnRGYW1pbHk6IGdldEZpbGxpbmdGb250RmFtaWx5LCBmaWxsaW5nSW5pdGlhbEZvbnRTaXplOiBmaWxsaW5nSW5pdGlhbEZvbnRTaXplLCBmaWxsaW5nRGVsdGFGb250U2l6ZTogZmlsbGluZ0RlbHRhRm9udFNpemUsIGZpbGxpbmdJbml0aWFsT3BhY2l0eTogZmlsbGluZ0luaXRpYWxPcGFjaXR5LCBmaWxsaW5nRGVsdGFPcGFjaXR5OiBmaWxsaW5nRGVsdGFPcGFjaXR5LCBmaWxsaW5nUm90YXRlTGlzdDogZmlsbGluZ1JvdGF0ZUxpc3QsIGdldEZpbGxpbmdQYWRkaW5nOiBnZXRGaWxsaW5nUGFkZGluZywgcmFuZG9tOiByYW5kb20sIGJvYXJkOiBib2FyZCwgbWluRmlsbEZvbnRTaXplOiBtaW5GaWxsRm9udFNpemV9ID0gbGF5b3V0Q29uZmlnLCB7Ym9hcmRTaXplOiBib2FyZFNpemUsIHNoYXBlQm91bmRzOiBzaGFwZUJvdW5kcywgdGVtcENhbnZhczogY2FudmFzLCByYW5kb21HZW5lcmF0b3I6IHJhbmRvbUdlbmVyYXRvcn0gPSBzZWdtZW50YXRpb25PdXRwdXQsIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiwge1xuICAgICAgICB3aWxsUmVhZEZyZXF1ZW50bHk6ICEwXG4gICAgfSk7XG4gICAgbGV0IGZvbnRTaXplID0gZmlsbGluZ0luaXRpYWxGb250U2l6ZSwgb3BhY2l0eSA9IGZpbGxpbmdJbml0aWFsT3BhY2l0eTtcbiAgICBjb25zdCBwbGFjZWRGaWxsaW5nV29yZHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGxpbmdUaW1lczsgaSsrKSBmaWxsaW5nMVRpbWUoZm9udFNpemUsIG9wYWNpdHkpLCBmb250U2l6ZSA9IE1hdGgubWF4KGZvbnRTaXplID4gZmlsbGluZ0RlbHRhRm9udFNpemUgPyBmb250U2l6ZSAtIGZpbGxpbmdEZWx0YUZvbnRTaXplIDogZmlsbGluZ0RlbHRhRm9udFNpemUsIG1pbkZpbGxGb250U2l6ZSksIFxuICAgIG9wYWNpdHkgPSBvcGFjaXR5ID4gZmlsbGluZ0RlbHRhT3BhY2l0eSA/IG9wYWNpdHkgLSBmaWxsaW5nRGVsdGFPcGFjaXR5IDogZmlsbGluZ0RlbHRhT3BhY2l0eTtcbiAgICByZXR1cm4gcGxhY2VkRmlsbGluZ1dvcmRzO1xuICAgIGZ1bmN0aW9uIGZpbGxpbmcxVGltZShmb250U2l6ZSwgb3BhY2l0eSkge1xuICAgICAgICBjb25zdCBmaWxsaW5nV29yZHMgPSB3b3Jkcy5tYXAoKHdvcmQgPT4ge1xuICAgICAgICAgICAgY29uc3Qge3RleHQ6IHRleHQsIGNvbG9yOiBjb2xvciwgZmlsbGluZ0NvbG9yOiBmaWxsaW5nQ29sb3IsIGhhc1BsYWNlZDogaGFzUGxhY2VkLCBkYXR1bTogZGF0dW19ID0gd29yZDtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgICAgIHdlaWdodDogMCxcbiAgICAgICAgICAgICAgICB0ZXh0OiB0ZXh0LFxuICAgICAgICAgICAgICAgIGZvbnRGYW1pbHk6IGdldEZpbGxpbmdGb250RmFtaWx5KGRhdHVtKSxcbiAgICAgICAgICAgICAgICBmb250U3R5bGU6IGdldEZpbGxpbmdGb250U3R5bGUoZGF0dW0pLFxuICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGdldEZpbGxpbmdGb250V2VpZ2h0KGRhdHVtKSxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogZm9udFNpemUsXG4gICAgICAgICAgICAgICAgcm90YXRlOiBmaWxsaW5nUm90YXRlTGlzdFt+fihyYW5kb21HZW5lcmF0b3IoKSAqIGZpbGxpbmdSb3RhdGVMaXN0Lmxlbmd0aCldLFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IGdldEZpbGxpbmdQYWRkaW5nKGRhdHVtKSxcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiBvcGFjaXR5LFxuICAgICAgICAgICAgICAgIHZpc2libGU6ICEwLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBjb2xvcixcbiAgICAgICAgICAgICAgICBmaWxsaW5nQ29sb3I6IGZpbGxpbmdDb2xvcixcbiAgICAgICAgICAgICAgICBoYXNQbGFjZWQ6IGhhc1BsYWNlZCxcbiAgICAgICAgICAgICAgICBkYXR1bTogZGF0dW1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pKTtcbiAgICAgICAgcmFuZG9tQXJyYXkoZmlsbGluZ1dvcmRzKTtcbiAgICAgICAgbGV0IHdpID0gMDtcbiAgICAgICAgY29uc3Qge3gxOiB4MSwgeTE6IHkxLCB4MjogeDIsIHkyOiB5Mn0gPSBzaGFwZUJvdW5kcywgW3N0YXJ0WCwgc3RhcnRZXSA9IFsgeDEgKyB+fihyYW5kb21HZW5lcmF0b3IoKSAqIGZpbGxpbmdYU3RlcCAqIDIpLCB5MSArIH5+KHJhbmRvbUdlbmVyYXRvcigpICogZmlsbGluZ1lTdGVwICogMikgXTtcbiAgICAgICAgZm9yIChsZXQgeSA9IHN0YXJ0WTsgeSA8PSB5MjsgeSArPSBmaWxsaW5nWVN0ZXApIGZvciAobGV0IHggPSBzdGFydFg7IHggPD0geDI7IHggKz0gZmlsbGluZ1hTdGVwKSB7XG4gICAgICAgICAgICBtZWFzdXJlU3ByaXRlKGNhbnZhcywgY3R4LCBmaWxsaW5nV29yZHMsIHdpKTtcbiAgICAgICAgICAgIGNvbnN0IHdvcmQgPSBmaWxsaW5nV29yZHNbd2ldO1xuICAgICAgICAgICAgd29yZC54ID0geCwgd29yZC55ID0geTtcbiAgICAgICAgICAgIGNvbnN0IHt3b3JkU2l6ZTogd29yZFNpemUsIGJvdW5kczogYm91bmRzLCBoYXNQbGFjZWQ6IGhhc1BsYWNlZH0gPSB3b3JkO1xuICAgICAgICAgICAgaWYgKCFoYXNQbGFjZWQgfHwgIWJvdW5kcykge1xuICAgICAgICAgICAgICAgICsrd2kgPT09IGZpbGxpbmdXb3Jkcy5sZW5ndGggJiYgKHdpID0gMCwgcmFuZG9tICYmIHJhbmRvbUFycmF5KGZpbGxpbmdXb3JkcykpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qge2RUb3A6IGRUb3AsIGRCb3R0b206IGRCb3R0b20sIGRMZWZ0OiBkTGVmdCwgZFJpZ2h0OiBkUmlnaHR9ID0gYm91bmRzO1xuICAgICAgICAgICAgd29yZC54IC0gZExlZnQgPCAwIHx8IHdvcmQueCArIGRSaWdodCA+IHNpemVbMF0gfHwgd29yZC55IC0gZFRvcCA8IDAgfHwgd29yZC55ICsgZEJvdHRvbSA+IHNpemVbMV0gfHwgd29yZC5oYXNUZXh0ICYmIHdvcmQuc3ByaXRlICYmICFpc0NvbGxpZGVXaXRoQm9hcmQod29yZCwgYm9hcmQsIGJvYXJkU2l6ZSkgJiYgKHBsYWNlV29yZE9uQm9hcmQod29yZCwgYm9hcmQsIGJvYXJkU2l6ZSksIFxuICAgICAgICAgICAgcGxhY2VkRmlsbGluZ1dvcmRzLnB1c2goT2JqZWN0LmFzc2lnbih7fSwgd29yZCkpLCArK3dpID09PSBmaWxsaW5nV29yZHMubGVuZ3RoICYmICh3aSA9IDAsIFxuICAgICAgICAgICAgcmFuZG9tICYmIHJhbmRvbUFycmF5KGZpbGxpbmdXb3JkcykpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiByYW5kb21BcnJheSh3b3Jkcykge1xuICAgICAgICByZXR1cm4gd29yZHMuc29ydCgoKCkgPT4gcmFuZG9tR2VuZXJhdG9yKCkgLSAuNSkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbGxpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/filling.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/index.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/index.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WORDCLOUD_SHAPE_HOOK_EVENT: () => (/* reexport safe */ _util__WEBPACK_IMPORTED_MODULE_0__.WORDCLOUD_SHAPE_HOOK_EVENT),\n/* harmony export */   registerWordCloudShapeTransforms: () => (/* binding */ registerWordCloudShapeTransforms)\n/* harmony export */ });\n/* harmony import */ var _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visactor/vgrammar-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-core@0.14.13/node_modules/@visactor/vgrammar-core/es/core/factory.js\");\n/* harmony import */ var _wordcloud_shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wordcloud-shape */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordcloud-shape.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/util.js\");\n\n\n\n\n\n\nconst registerWordCloudShapeTransforms = () => {\n    _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_1__.Factory.registerTransform(\"wordcloudShape\", {\n        transform: _wordcloud_shape__WEBPACK_IMPORTED_MODULE_2__.transform,\n        markPhase: \"beforeJoin\"\n    }, !0);\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXdvcmRjbG91ZC1zaGFwZUAwLjE0LjEzL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlL2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtEOztBQUVKOztBQUVNOztBQUU3QztBQUNQLElBQUksNERBQU87QUFDWCxtQkFBbUIsdURBQVM7QUFDNUI7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z5bmxhdGljcy1haS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdmlzYWN0b3IrdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlQDAuMTQuMTMvbm9kZV9tb2R1bGVzL0B2aXNhY3Rvci92Z3JhbW1hci13b3JkY2xvdWQtc2hhcGUvZXMvaW5kZXguanM/MzFjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGYWN0b3J5IH0gZnJvbSBcIkB2aXNhY3Rvci92Z3JhbW1hci1jb3JlXCI7XG5cbmltcG9ydCB7IHRyYW5zZm9ybSB9IGZyb20gXCIuL3dvcmRjbG91ZC1zaGFwZVwiO1xuXG5leHBvcnQgeyBXT1JEQ0xPVURfU0hBUEVfSE9PS19FVkVOVCB9IGZyb20gXCIuL3V0aWxcIjtcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyV29yZENsb3VkU2hhcGVUcmFuc2Zvcm1zID0gKCkgPT4ge1xuICAgIEZhY3RvcnkucmVnaXN0ZXJUcmFuc2Zvcm0oXCJ3b3JkY2xvdWRTaGFwZVwiLCB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNmb3JtLFxuICAgICAgICBtYXJrUGhhc2U6IFwiYmVmb3JlSm9pblwiXG4gICAgfSwgITApO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/layout.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/layout.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Layout: () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/isString.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/array.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/angle.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/isFunction.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/toNumber.js\");\n/* harmony import */ var _segmentation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./segmentation */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/segmentation.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/util.js\");\n/* harmony import */ var _visactor_vscale__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @visactor/vscale */ \"(ssr)/./node_modules/.pnpm/@visactor+vscale@0.18.18/node_modules/@visactor/vscale/es/ordinal-scale.js\");\n/* harmony import */ var _visactor_vscale__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @visactor/vscale */ \"(ssr)/./node_modules/.pnpm/@visactor+vscale@0.18.18/node_modules/@visactor/vscale/es/linear-scale.js\");\n/* harmony import */ var _visactor_vscale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @visactor/vscale */ \"(ssr)/./node_modules/.pnpm/@visactor+vscale@0.18.18/node_modules/@visactor/vscale/es/sqrt-scale.js\");\n/* harmony import */ var _cloud_shape_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cloud-shape-layout */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/cloud-shape-layout.js\");\n/* harmony import */ var _visactor_vrender_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vrender-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vrender-core@0.20.12/node_modules/@visactor/vrender-core/es/modules.js\");\n/* harmony import */ var _visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visactor/vgrammar-util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-util@0.14.13/node_modules/@visactor/vgrammar-util/es/image.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst OUTPUT = {\n    x: \"x\",\n    y: \"y\",\n    fontFamily: \"fontFamily\",\n    fontSize: \"fontSize\",\n    fontStyle: \"fontStyle\",\n    fontWeight: \"fontWeight\",\n    angle: \"angle\",\n    opacity: \"opacity\",\n    visible: \"visible\",\n    isFillingWord: \"isFillingWord\",\n    color: \"color\"\n};\n\nclass Layout {\n    constructor(options, view) {\n        this.progressiveResult = [], this.options = options, this.view = view;\n    }\n    layout(data) {\n        this.data = data;\n        const options = this.options, segmentationInput = {\n            shapeUrl: options.shape,\n            size: options.size,\n            ratio: options.ratio || .8,\n            tempCanvas: void 0,\n            boardSize: [ 0, 0 ],\n            random: !1,\n            randomGenerator: void 0\n        }, tempCanvas = _visactor_vrender_core__WEBPACK_IMPORTED_MODULE_0__.vglobal.createCanvas({\n            width: options.size[0],\n            height: options.size[1]\n        }), tempCtx = tempCanvas.getContext(\"2d\", {\n            willReadFrequently: !0\n        });\n        tempCtx.textAlign = \"center\", tempCtx.textBaseline = \"middle\", segmentationInput.tempCanvas = tempCanvas;\n        const boardW = options.size[0] + 31 >> 5 << 5;\n        if (segmentationInput.boardSize = [ boardW, options.size[1] ], segmentationInput.random ? segmentationInput.randomGenerator = Math.random : segmentationInput.randomGenerator = (0,_util__WEBPACK_IMPORTED_MODULE_1__.fakeRandom)(), \n        this.segmentationInput = segmentationInput, (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(segmentationInput.shapeUrl)) {\n            segmentationInput.isEmptyPixel = (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_3__.generateIsEmptyPixel)();\n            const imagePromise = (0,_util__WEBPACK_IMPORTED_MODULE_1__.loadImage)(segmentationInput.shapeUrl);\n            imagePromise ? (this.isImageFinished = !1, this.isLayoutFinished = !1, imagePromise.then((shapeImage => {\n                this.isImageFinished = !0;\n                const maskCanvas = _visactor_vrender_core__WEBPACK_IMPORTED_MODULE_0__.vglobal.createCanvas({\n                    width: options.size[0],\n                    height: options.size[1],\n                    dpr: 1\n                });\n                segmentationInput.maskCanvas = maskCanvas;\n                const ctx = maskCanvas.getContext(\"2d\");\n                options.removeWhiteBorder && (0,_segmentation__WEBPACK_IMPORTED_MODULE_4__.removeBorder)(shapeImage, maskCanvas, segmentationInput.isEmptyPixel);\n                const shapeConfig = (0,_segmentation__WEBPACK_IMPORTED_MODULE_4__.scaleAndMiddleShape)(shapeImage, options.size);\n                ctx.clearRect(0, 0, options.size[0], options.size[1]), ctx.drawImage(shapeImage, shapeConfig.x, shapeConfig.y, shapeConfig.width, shapeConfig.height), \n                this.options.onUpdateMaskCanvas && this.options.onUpdateMaskCanvas(segmentationInput.maskCanvas);\n            })).catch((error => {\n                this.isImageFinished = !0;\n            }))) : (this.isImageFinished = !0, this.isLayoutFinished = !0);\n        } else if (segmentationInput.shapeUrl && (\"text\" === segmentationInput.shapeUrl.type || \"geometric\" === segmentationInput.shapeUrl.type)) {\n            segmentationInput.isEmptyPixel = (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_3__.generateIsEmptyPixel)(segmentationInput.shapeUrl.backgroundColor);\n            const maskCanvas = (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_3__.generateMaskCanvas)(segmentationInput.shapeUrl, options.size[0], options.size[1]);\n            segmentationInput.maskCanvas = maskCanvas, this.options.onUpdateMaskCanvas && this.options.onUpdateMaskCanvas(maskCanvas), \n            this.doLayout(), this.isImageFinished = !0, this.isLayoutFinished = !0;\n        }\n    }\n    canAnimate() {\n        return !0;\n    }\n    unfinished() {\n        return !this.isLayoutFinished;\n    }\n    output() {\n        return this.progressiveResult;\n    }\n    progressiveRun() {\n        this.isImageFinished && !this.isLayoutFinished && (this.segmentationInput.maskCanvas && this.doLayout(), \n        this.isLayoutFinished = !0);\n    }\n    progressiveOutput() {\n        return this.progressiveResult;\n    }\n    doLayout() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\n        const segmentationInput = this.segmentationInput, segmentationOutput = (0,_segmentation__WEBPACK_IMPORTED_MODULE_4__.segmentation)(segmentationInput);\n        if (!segmentationOutput.segmentation.regions.length) return;\n        const options = this.options, data = this.data, colorMode = options.colorMode || \"ordinal\", wordsConfig = {\n            getText: field(options.text),\n            getFontSize: field(options.fontSize),\n            fontSizeRange: options.fontSizeRange,\n            colorMode: colorMode,\n            getColor: options.colorField ? field(options.colorField) : field(options.text),\n            getFillingColor: field(options.fillingColorField),\n            colorList: options.colorList || (\"ordinal\" === colorMode ? [ \"#2E62F1\" ] : [ \"#537EF5\", \"#2E62F1\", \"#2358D8\", \"#184FBF\", \"#0C45A6\", \"#013B8E\" ]),\n            getColorHex: field(options.colorHexField),\n            getFontFamily: field(options.fontFamily || \"sans-serif\"),\n            rotateList: options.rotateList || [ 0 ],\n            getPadding: field(options.padding || 1),\n            getFontStyle: field(options.fontStyle || \"normal\"),\n            getFontWeight: field(options.fontWeight || \"normal\"),\n            getFontOpacity: options.fontOpacity ? field(options.fontOpacity) : () => 1\n        };\n        initFontSizeScale(data, wordsConfig, segmentationOutput);\n        const layoutConfig = {\n            size: options.size,\n            ratio: options.ratio || .8,\n            shapeUrl: options.shape,\n            random: void 0 === options.random || options.random,\n            textLayoutTimes: null !== (_a = options.textLayoutTimes) && void 0 !== _a ? _a : 3,\n            removeWhiteBorder: options.removeWhiteBorder,\n            layoutMode: null !== (_b = options.layoutMode) && void 0 !== _b ? _b : \"default\",\n            fontSizeShrinkFactor: null !== (_c = options.fontSizeShrinkFactor) && void 0 !== _c ? _c : .8,\n            stepFactor: null !== (_d = options.stepFactor) && void 0 !== _d ? _d : 1,\n            importantWordCount: null !== (_e = options.importantWordCount) && void 0 !== _e ? _e : 10,\n            globalShinkLimit: options.globalShinkLimit || .2,\n            fontSizeEnlargeFactor: null !== (_f = options.fontSizeEnlargeFactor) && void 0 !== _f ? _f : 1.5,\n            fillingRatio: null !== (_g = options.fillingRatio) && void 0 !== _g ? _g : .7,\n            fillingTimes: null !== (_h = options.fillingTimes) && void 0 !== _h ? _h : 4,\n            fillingXStep: options.fillingXRatioStep ? Math.max(Math.floor(options.size[0] * options.fillingXRatioStep), 1) : null !== (_j = options.fillingXStep) && void 0 !== _j ? _j : 4,\n            fillingYStep: options.fillingYRatioStep ? Math.max(Math.floor(options.size[1] * options.fillingYRatioStep), 1) : null !== (_k = options.fillingYStep) && void 0 !== _k ? _k : 4,\n            fillingInitialFontSize: options.fillingInitialFontSize,\n            fillingDeltaFontSize: options.fillingDeltaFontSize,\n            fillingInitialOpacity: null !== (_l = options.fillingInitialOpacity) && void 0 !== _l ? _l : .8,\n            fillingDeltaOpacity: null !== (_m = options.fillingDeltaOpacity) && void 0 !== _m ? _m : .05,\n            getFillingFontFamily: field(options.fillingFontFamily || \"sans-serif\"),\n            getFillingFontStyle: field(options.fillingFontStyle || \"normal\"),\n            getFillingFontWeight: field(options.fillingFontWeight || \"normal\"),\n            getFillingPadding: field(null !== (_o = options.fillingPadding) && void 0 !== _o ? _o : .4),\n            fillingRotateList: null !== (_p = options.fillingRotateList) && void 0 !== _p ? _p : [ 0, 90 ],\n            fillingDeltaFontSizeFactor: null !== (_q = options.fillingDeltaFontSizeFactor) && void 0 !== _q ? _q : .2,\n            fillingColorList: options.fillingColorList || [ \"#537EF5\" ],\n            sameColorList: !1,\n            minInitFontSize: null !== (_r = options.minInitFontSize) && void 0 !== _r ? _r : 10,\n            minFontSize: null !== (_s = options.minFontSize) && void 0 !== _s ? _s : 4,\n            minFillFontSize: null !== (_t = options.minFillFontSize) && void 0 !== _t ? _t : 2\n        }, sameColorList = (0,_util__WEBPACK_IMPORTED_MODULE_1__.colorListEqual)(wordsConfig.colorList, layoutConfig.fillingColorList);\n        layoutConfig.sameColorList = sameColorList, initColorScale(data, wordsConfig, layoutConfig, options), \n        initFillingWordsFontSize(data, wordsConfig, layoutConfig, segmentationOutput);\n        const {getText: getText, getFontFamily: getFontFamily, getFontStyle: getFontStyle, getFontWeight: getFontWeight, getPadding: getPadding, getColor: getColor, getFillingColor: getFillingColor, getColorHex: getColorHex, fontSizeScale: fontSizeScale, colorScale: colorScale, fillingColorScale: fillingColorScale, getFontOpacity: getFontOpacity, rotateList: rotateList} = wordsConfig, words = data.map((datum => {\n            var _a, _b;\n            return {\n                x: 0,\n                y: 0,\n                weight: 0,\n                text: getText(datum),\n                fontFamily: getFontFamily(datum),\n                fontWeight: getFontWeight(datum),\n                fontStyle: getFontStyle(datum),\n                rotate: rotateList[~~(segmentationInput.randomGenerator() * rotateList.length)],\n                fontSize: Math.max(layoutConfig.minInitFontSize, ~~fontSizeScale(datum)),\n                opacity: getFontOpacity(datum),\n                padding: getPadding(datum),\n                color: getColorHex && getColorHex(datum) || colorScale && colorScale(getColor(datum)) || \"black\",\n                fillingColor: !getFillingColor || (null === (_a = options.colorField) || void 0 === _a ? void 0 : _a.field) === (null === (_b = options.fillingColorField) || void 0 === _b ? void 0 : _b.field) && sameColorList ? void 0 : getColorHex && getColorHex(datum) || fillingColorScale && fillingColorScale(getFillingColor(datum)) || \"black\",\n                datum: datum,\n                visible: !0,\n                hasPlaced: !1\n            };\n        })), wordsMaxFontSize = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_5__.maxInArray)(words.map((word => word.fontSize)));\n        words.forEach((word => word.weight = word.fontSize / wordsMaxFontSize)), words.sort(((a, b) => b.weight - a.weight));\n        const {fillingWords: fillingWords, successedWords: successedWords, failedWords: failedWords} = (0,_cloud_shape_layout__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(words, layoutConfig, segmentationOutput), textKey = null !== (_v = null === (_u = options.text) || void 0 === _u ? void 0 : _u.field) && void 0 !== _v ? _v : \"textKey\", dataIndexKey = null !== (_w = options.dataIndexKey) && void 0 !== _w ? _w : \"defaultDataIndexKey\", as = options.as ? Object.assign(Object.assign({}, OUTPUT), options.as) : OUTPUT;\n        let w, t;\n        const modKeywords = [];\n        for (let i = 0; i < words.length; ++i) w = words[i], t = w.datum, t[as.x] = w.x, \n        t[as.y] = w.y, t[as.fontFamily] = w.fontFamily, t[as.fontSize] = w.fontSize, t[as.fontStyle] = w.fontStyle, \n        t[as.fontWeight] = w.fontWeight, t[as.angle] = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_7__.degreeToRadian)(w.rotate), t[as.opacity] = w.opacity, \n        t[as.visible] = w.visible, t[as.isFillingWord] = !1, t[as.color] = w.color, t[dataIndexKey] = `${w.text}_${i}_keyword`, \n        modKeywords.push(t);\n        const fillingWordsData = [];\n        if (fillingWords.forEach(((word, index) => {\n            var _a, _b;\n            const t = Object.assign({}, word.datum);\n            t[as.x] = word.x, t[as.y] = word.y, t[as.fontFamily] = word.fontFamily, t[as.fontSize] = word.fontSize, \n            t[as.fontStyle] = word.fontStyle, t[as.fontWeight] = word.fontWeight, t[as.angle] = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_7__.degreeToRadian)(word.rotate), \n            t[as.opacity] = word.opacity, t[as.visible] = word.visible, t[as.isFillingWord] = !0, \n            t[as.color] = getFillingColor ? (null === (_a = options.colorField) || void 0 === _a ? void 0 : _a.field) === (null === (_b = options.fillingColorField) || void 0 === _b ? void 0 : _b.field) && sameColorList ? word.color : word.fillingColor : layoutConfig.fillingColorList[~~(segmentationInput.randomGenerator() * layoutConfig.fillingColorList.length)], \n            t[textKey] = word.text, t[dataIndexKey] = `${word.text}_${index}_fillingWords`, \n            fillingWordsData.push(t);\n        })), this.view && this.view.emit) {\n            this.view.emit(_util__WEBPACK_IMPORTED_MODULE_1__.WORDCLOUD_SHAPE_HOOK_EVENT.AFTER_WORDCLOUD_SHAPE_LAYOUT, {\n                successedWords: successedWords,\n                failedWords: failedWords\n            });\n            const stage = null === (_x = this.view.renderer) || void 0 === _x ? void 0 : _x.stage();\n            stage && stage.hooks.afterRender.tap(_util__WEBPACK_IMPORTED_MODULE_1__.WORDCLOUD_SHAPE_HOOK_EVENT.AFTER_WORDCLOUD_SHAPE_DRAW, (() => {\n                this.view.emit(_util__WEBPACK_IMPORTED_MODULE_1__.WORDCLOUD_SHAPE_HOOK_EVENT.AFTER_WORDCLOUD_SHAPE_DRAW, {\n                    successedWords: successedWords,\n                    failedWords: failedWords\n                }), stage.hooks.afterRender.unTap(_util__WEBPACK_IMPORTED_MODULE_1__.WORDCLOUD_SHAPE_HOOK_EVENT.AFTER_WORDCLOUD_SHAPE_DRAW);\n            }));\n        }\n        this.progressiveResult = modKeywords.concat(fillingWordsData);\n    }\n    release() {\n        this.segmentationInput = null, this.data = null, this.progressiveResult = null, \n        this.options = null;\n    }\n}\n\nconst initColorScale = (data, wordsConfig, layoutConfig, options) => {\n    var _a, _b, _c, _d;\n    const {colorMode: colorMode, getColor: getColor, getFillingColor: getFillingColor} = wordsConfig, {sameColorList: sameColorList} = layoutConfig;\n    let colorScale, fillingColorScale, colorList = wordsConfig.colorList, fillingColorList = layoutConfig.fillingColorList;\n    if (\"ordinal\" === colorMode) {\n        const uniqueColorField = data.map((word => getColor(word)));\n        if (colorScale = datum => (new _visactor_vscale__WEBPACK_IMPORTED_MODULE_8__.OrdinalScale).domain(uniqueColorField).range(colorList).scale(datum), \n        getFillingColor && ((null === (_a = options.colorField) || void 0 === _a ? void 0 : _a.field) !== (null === (_b = options.fillingColorField) || void 0 === _b ? void 0 : _b.field) || !sameColorList)) {\n            const uniquefillingColorField = data.map((datum => getFillingColor(datum)));\n            fillingColorScale = datum => (new _visactor_vscale__WEBPACK_IMPORTED_MODULE_8__.OrdinalScale).domain(uniquefillingColorField).range(fillingColorList).scale(datum);\n        }\n    } else {\n        1 === colorList.length && (colorList = [ colorList[0], colorList[0] ]);\n        const valueScale = (new _visactor_vscale__WEBPACK_IMPORTED_MODULE_9__.LinearScale).domain(extent(getColor, data)).range(colorList);\n        if (colorScale = i => valueScale.scale(i), getFillingColor && ((null === (_c = options.colorField) || void 0 === _c ? void 0 : _c.field) !== (null === (_d = options.fillingColorField) || void 0 === _d ? void 0 : _d.field) || !sameColorList)) {\n            1 === fillingColorList.length && (fillingColorList = [ fillingColorList[0], fillingColorList[0] ]);\n            const fillingValueScale = (new _visactor_vscale__WEBPACK_IMPORTED_MODULE_9__.LinearScale).domain(extent(getFillingColor, data)).range(fillingColorList);\n            fillingColorScale = i => fillingValueScale.scale(i);\n        }\n    }\n    Object.assign(wordsConfig, {\n        colorScale: colorScale,\n        fillingColorScale: fillingColorScale\n    });\n}, initFontSizeScale = (data, wordsConfig, segmentationOutput) => {\n    let {fontSizeRange: range} = wordsConfig;\n    const {getFontSize: getFontSize, getText: getText} = wordsConfig;\n    let fontSizeScale;\n    if (getFontSize) {\n        if (getFontSize && range) {\n            const sizeScale = (new _visactor_vscale__WEBPACK_IMPORTED_MODULE_10__.SqrtScale).domain(extent(getFontSize, data)).range(range);\n            fontSizeScale = datum => sizeScale.scale(getFontSize(datum));\n        } else if (getFontSize && (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(getFontSize) && !range) {\n            const a = .5, [min, max] = extent(getFontSize, data), words = data.map((datum => ({\n                text: getText(datum),\n                value: getFontSize(datum),\n                weight: max === min ? 1 : (getFontSize(datum) - min) / (max - min)\n            }))), x = getInitialFontSize(words, segmentationOutput, !0);\n            range = [ ~~(a * x), ~~x ];\n            const sizeScale = (new _visactor_vscale__WEBPACK_IMPORTED_MODULE_10__.SqrtScale).domain(extent(getFontSize, data)).range(range);\n            fontSizeScale = datum => sizeScale.scale(getFontSize(datum));\n        }\n    } else {\n        const words = data.map((word => ({\n            text: getText(word)\n        }))), x = getInitialFontSize(words, segmentationOutput, !1);\n        fontSizeScale = (0,_util__WEBPACK_IMPORTED_MODULE_1__.functor)(x);\n    }\n    Object.assign(wordsConfig, {\n        getFontSize: getFontSize,\n        fontSizeRange: range,\n        fontSizeScale: fontSizeScale\n    });\n}, getInitialFontSize = (words, segmentationOutput, weight) => {\n    const shapeArea = segmentationOutput.shapeArea, ratio = segmentationOutput.ratio, regions = segmentationOutput.segmentation.regions, shapeSizeLimitTextLength = Math.ceil(Math.sqrt(shapeArea) / 12), wordArea = words.reduce(((acc, word) => {\n        const textLength = (0,_util__WEBPACK_IMPORTED_MODULE_1__.calTextLength)(word.text);\n        return textLength < shapeSizeLimitTextLength ? acc + textLength * (weight ? (.5 + .5 * word.weight) ** 2 : 1) : acc;\n    }), 0);\n    if (0 === wordArea) return 12;\n    let x = 20;\n    if (1 === regions.length) x = Math.sqrt(ratio * (shapeArea / (1.7 * wordArea))); else {\n        const xArr = [];\n        for (let i = 0; i < regions.length; i++) {\n            const regionArea = regions[i].area, regionAspect = regions[i].ratio, regionRatio = regionArea / shapeArea;\n            if (regionRatio < .1) continue;\n            const regionWordArea = regionRatio * (wordArea * (regionAspect < 1 ? 2.7 - regionAspect : 1.7)), x = Math.sqrt(ratio * (regionArea / regionWordArea));\n            xArr.push(x);\n        }\n        x = xArr.length ? Math.min(...xArr) : Math.sqrt(ratio * (shapeArea / (1.7 * wordArea)));\n    }\n    return x;\n};\n\nfunction initFillingWordsFontSize(data, wordsConfig, layoutConfig, segmentationOutput) {\n    const {getText: getText} = wordsConfig;\n    let {fillingInitialFontSize: fillingInitialFontSize, fillingDeltaFontSize: fillingDeltaFontSize} = layoutConfig;\n    const {fillingRatio: fillingRatio} = layoutConfig, shapeSizeLimitTextLength = Math.ceil(Math.sqrt(segmentationOutput.shapeArea) / 4);\n    if (!fillingInitialFontSize || !fillingDeltaFontSize) {\n        const a = fillingRatio / 100, averageLength = data.reduce(((acc, word) => {\n            const length = (0,_util__WEBPACK_IMPORTED_MODULE_1__.calTextLength)(getText(word));\n            return length > shapeSizeLimitTextLength ? acc : acc + length;\n        }), 0) / data.length;\n        let fontSize;\n        if (0 === averageLength) fontSize = 8; else {\n            const area = .2 * segmentationOutput.shapeArea;\n            fontSize = Math.sqrt(a * (area / averageLength));\n        }\n        fillingInitialFontSize = ~~fontSize, fillingDeltaFontSize = fontSize * layoutConfig.fillingDeltaFontSizeFactor, \n        Object.assign(layoutConfig, {\n            fillingInitialFontSize: fillingInitialFontSize,\n            fillingDeltaFontSize: fillingDeltaFontSize\n        });\n    }\n}\n\nconst extent = (field, data) => {\n    let min = 1 / 0, max = -1 / 0;\n    const n = data.length;\n    let v;\n    for (let i = 0; i < n; ++i) v = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_12__.toNumber)(field(data[i])), v < min && (min = v), \n    v > max && (max = v);\n    return 1 === data.length && min === max && (min -= 1e4), [ min, max ];\n}, field = option => option ? \"string\" == typeof option || \"number\" == typeof option ? () => option : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(option) ? option : datum => datum[option.field] : null;\n//# sourceMappingURL=layout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/segmentation.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/segmentation.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allocateWords: () => (/* binding */ allocateWords),\n/* harmony export */   removeBorder: () => (/* binding */ removeBorder),\n/* harmony export */   scaleAndMiddleShape: () => (/* binding */ scaleAndMiddleShape),\n/* harmony export */   segmentation: () => (/* binding */ segmentation)\n/* harmony export */ });\nfunction segmentation(segmentationInput) {\n    const {size: size, maskCanvas: maskCanvas} = segmentationInput, imageData = maskCanvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    }).getImageData(0, 0, maskCanvas.width, maskCanvas.height), labels = new Array(size[0] * size[1]).fill(0);\n    let curLabel = 1;\n    const offset = [ [ 0, 1 ], [ 1, 0 ], [ -1, 0 ], [ 0, -1 ] ];\n    let queue = [];\n    for (let i = 0; i < size[1]; i++) for (let j = 0; j < size[0]; j++) if (0 === labels[i * size[0] + j] && !segmentationInput.isEmptyPixel(imageData, i, j)) {\n        labels[i * size[0] + j] = curLabel, queue.push([ i, j ]);\n        for (let k = 0; k < queue.length; k++) for (let m = 0; m < 4; m++) {\n            let row = queue[k][0] + offset[m][0], col = queue[k][1] + offset[m][1];\n            row = row < 0 ? 0 : row >= size[1] ? size[1] - 1 : row, col = col < 0 ? 0 : col >= size[0] ? size[0] - 1 : col, \n            0 !== labels[row * size[0] + col] || segmentationInput.isEmptyPixel(imageData, row, col) || (labels[row * size[0] + col] = curLabel, \n            queue.push([ row, col ]));\n        }\n        curLabel++, queue = [];\n    }\n    const boundaries = {}, areas = {}, centers = {}, maxPoints = {}, maxR = {}, ratios = {}, shapeBounds = {\n        x1: 1 / 0,\n        x2: -1 / 0,\n        y1: 1 / 0,\n        y2: -1 / 0,\n        width: 0,\n        height: 0\n    };\n    for (let i = 0; i < size[1]; i++) for (let j = 0; j < size[0]; j++) {\n        const label = labels[i * size[0] + j];\n        0 !== label && (isBoundaryPixel(i, j) && (boundaries[label] = boundaries[label] || [], \n        boundaries[label].push([ j, i ]), maxPoints[label] || (maxPoints[label] = [ 1 / 0, -1 / 0, 1 / 0, -1 / 0 ]), \n        i < maxPoints[label][0] && (maxPoints[label][0] = i), i > maxPoints[label][1] && (maxPoints[label][1] = i), \n        j < maxPoints[label][2] && (maxPoints[label][2] = j), j > maxPoints[label][3] && (maxPoints[label][3] = j), \n        j < shapeBounds.x1 && (shapeBounds.x1 = j), j > shapeBounds.x2 && (shapeBounds.x2 = j), \n        i < shapeBounds.y1 && (shapeBounds.y1 = i), i > shapeBounds.y2 && (shapeBounds.y2 = i)), \n        areas[label] = areas[label] || 0, areas[label]++);\n    }\n    const allBoundaries = [];\n    for (const label in boundaries) {\n        const boundary = boundaries[label], x = ~~(boundary.reduce(((acc, cur) => acc + cur[0]), 0) / boundary.length), y = ~~(boundary.reduce(((acc, cur) => acc + cur[1]), 0) / boundary.length);\n        centers[label] = [ x, y ], allBoundaries.push(...boundary);\n        const [yMin, yMax, xMin, xMax] = maxPoints[label];\n        maxR[label] = ~~Math.max(Math.sqrt((x - xMin) ** 2 + (y - yMin) ** 2), Math.sqrt((x - xMax) ** 2 + (y - yMax) ** 2), Math.sqrt((x - xMin) ** 2 + (y - yMax) ** 2), Math.sqrt((x - xMax) ** 2 + (y - yMin) ** 2)), \n        ratios[label] = (xMax - xMin) / (yMax - yMin);\n    }\n    const regions = Object.keys(centers).map((key => ({\n        label: key - 1,\n        boundary: boundaries[key],\n        area: areas[key],\n        center: centers[key],\n        maxPoint: maxPoints[key],\n        maxR: maxR[key],\n        ratio: ratios[key]\n    })));\n    shapeBounds.width = shapeBounds.x2 - shapeBounds.x1 + 1, shapeBounds.height = shapeBounds.y2 - shapeBounds.y1 + 1;\n    const x = ~~(allBoundaries.reduce(((acc, cur) => acc + cur[0]), 0) / allBoundaries.length), y = ~~(allBoundaries.reduce(((acc, cur) => acc + cur[1]), 0) / allBoundaries.length), shapeMaxR = ~~Math.max(Math.sqrt((x - shapeBounds.x1) ** 2 + (y - shapeBounds.y1) ** 2), Math.sqrt((x - shapeBounds.x2) ** 2 + (y - shapeBounds.y2) ** 2), Math.sqrt((x - shapeBounds.x1) ** 2 + (y - shapeBounds.y2) ** 2), Math.sqrt((x - shapeBounds.x2) ** 2 + (y - shapeBounds.y1) ** 2)), shapeRatio = shapeBounds.width / shapeBounds.height, shapeArea = Object.keys(areas).reduce(((acc, key) => acc + areas[key]), 0), segmentation = {\n        regions: regions,\n        labels: labels,\n        labelNumber: curLabel - 1\n    };\n    return Object.assign(segmentationInput, {\n        segmentation: segmentation,\n        shapeBounds: shapeBounds,\n        shapeMaxR: shapeMaxR,\n        shapeRatio: shapeRatio,\n        shapeCenter: [ x, y ],\n        shapeArea: shapeArea\n    });\n    function isBoundaryPixel(i, j) {\n        const offset = [ [ 0, 1 ], [ 1, 0 ], [ -1, 0 ], [ 0, -1 ] ];\n        if (0 === i || 0 === j || i === size[1] - 1 || j === size[0] - 1) return !0;\n        for (let k = 0; k < 4; k++) {\n            let row = i + offset[k][0], col = j + offset[k][1];\n            if (row = row < 0 ? 0 : row >= size[1] ? size[1] - 1 : row, col = col < 0 ? 0 : col >= size[0] ? size[0] - 1 : col, \n            0 === labels[row * size[0] + col]) return !0;\n        }\n        return !1;\n    }\n}\n\nfunction removeBorder(image, canvas, isEmptyPixel) {\n    canvas.width = image.width, canvas.height = image.height;\n    const ctx = canvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    });\n    ctx.clearRect(0, 0, canvas.width, canvas.height), ctx.drawImage(image, 0, 0);\n    const width = canvas.width, imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let top = 0, bottom = imageData.height, left = 0, right = imageData.width;\n    const rowBlank = (width, y) => {\n        for (let x = 0; x < width; ++x) if (!isEmptyPixel(imageData, y, x)) return !1;\n        return !0;\n    }, columnBlank = (x, y0, y1) => {\n        for (let y = y0; y < y1; ++y) if (!isEmptyPixel(imageData, y, x)) return !1;\n        return !0;\n    };\n    for (;top < bottom && rowBlank(width, top); ) ++top;\n    for (;bottom - 1 > top && rowBlank(width, bottom - 1); ) --bottom;\n    for (;left < right && columnBlank(left, top, bottom); ) ++left;\n    for (;right - 1 > left && columnBlank(right - 1, top, bottom); ) --right;\n    const trimmed = ctx.getImageData(left, top, right - left, bottom - top);\n    return canvas.width = trimmed.width, canvas.height = trimmed.height, ctx.clearRect(0, 0, canvas.width, canvas.height), \n    ctx.putImageData(trimmed, 0, 0), canvas;\n}\n\nfunction scaleAndMiddleShape(image, size) {\n    const width = image.width, height = image.height;\n    let scale = size[0] / width;\n    height * scale > size[1] && (scale = size[1] / height);\n    const newWidth = Math.floor(scale * width), newHeight = Math.floor(scale * height);\n    return {\n        x: (size[0] - newWidth) / 2,\n        y: (size[1] - newHeight) / 2,\n        width: newWidth,\n        height: newHeight,\n        scale: scale\n    };\n}\n\nfunction allocateWords(words, segmentationOutput) {\n    const {segmentation: {regions: regions}} = segmentationOutput;\n    let areaMax = -1 / 0, totalArea = 0, areaMaxIndex = 0;\n    regions.forEach(((region, index) => {\n        const area = region.area;\n        area > areaMax && (areaMax = area, areaMaxIndex = index), totalArea += area;\n    }));\n    let wordsSum = 0;\n    regions.forEach((region => {\n        const area = region.area, regionNum = Math.ceil(area / totalArea * words.length), regionWeight = area / areaMax;\n        region.words = [], region.regionNum = regionNum, region.regionWeight = regionWeight, \n        wordsSum += regionNum;\n    })), wordsSum < words.length && (regions[areaMaxIndex].wordsNum += words.length - wordsSum);\n    let currIndex = areaMaxIndex;\n    const regionNums = regions.map((region => region.regionNum));\n    words.forEach((word => {\n        let failCounter = 0, updateCounter = 0;\n        word.regionIndex = -1;\n        do {\n            if (regionNums[currIndex] > 0 && word.weight <= regions[currIndex].regionWeight) {\n                word.regionIndex = currIndex, regions[currIndex].words.push(word), regionNums[currIndex]--, \n                currIndex = (currIndex + 1) % regions.length;\n                break;\n            }\n            currIndex = (currIndex + 1) % regions.length, failCounter++, updateCounter++, updateCounter > regions.length + 1 && (regions.forEach((region => {\n                region.regionWeight += .15;\n            })), updateCounter = 0);\n        } while (-1 === word.regionIndex && failCounter < 3 * regions.length);\n        -1 === word.regionIndex && (word.regionIndex = areaMaxIndex, regions[areaMaxIndex].words.push(word), \n        regionNums[areaMaxIndex]--);\n    })), regions.forEach((region => {\n        region.words.sort(((a, b) => b.weight - a.weight));\n    }));\n}\n//# sourceMappingURL=segmentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/segmentation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/util.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/util.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WORDCLOUD_SHAPE_HOOK_EVENT: () => (/* binding */ WORDCLOUD_SHAPE_HOOK_EVENT),\n/* harmony export */   calTextLength: () => (/* binding */ calTextLength),\n/* harmony export */   colorListEqual: () => (/* binding */ colorListEqual),\n/* harmony export */   draw: () => (/* binding */ draw),\n/* harmony export */   drawSpiral: () => (/* binding */ drawSpiral),\n/* harmony export */   fakeRandom: () => (/* binding */ fakeRandom),\n/* harmony export */   functor: () => (/* binding */ functor),\n/* harmony export */   isChinese: () => (/* binding */ isChinese),\n/* harmony export */   loadImage: () => (/* binding */ loadImage),\n/* harmony export */   paint: () => (/* binding */ paint),\n/* harmony export */   paintLabels: () => (/* binding */ paintLabels)\n/* harmony export */ });\n/* harmony import */ var _visactor_vrender_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visactor/vrender-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vrender-core@0.20.12/node_modules/@visactor/vrender-core/es/graphic/image.js\");\n/* harmony import */ var _visactor_vrender_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @visactor/vrender-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vrender-core@0.20.12/node_modules/@visactor/vrender-core/es/modules.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/isNil.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/isValidUrl.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/isBase64.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/logger.js\");\n\n\n\n\nvar WORDCLOUD_SHAPE_HOOK_EVENT;\n\n!function(WORDCLOUD_SHAPE_HOOK_EVENT) {\n    WORDCLOUD_SHAPE_HOOK_EVENT.BEFORE_WORDCLOUD_SHAPE_LAYOUT = \"beforeWordcloudShapeLayout\", \n    WORDCLOUD_SHAPE_HOOK_EVENT.AFTER_WORDCLOUD_SHAPE_LAYOUT = \"afterWordcloudShapeLayout\", \n    WORDCLOUD_SHAPE_HOOK_EVENT.AFTER_WORDCLOUD_SHAPE_DRAW = \"afterWordcloudShapeDraw\";\n}(WORDCLOUD_SHAPE_HOOK_EVENT || (WORDCLOUD_SHAPE_HOOK_EVENT = {}));\n\nconst colorListEqual = (arr0, arr1) => {\n    if (1 === arr1.length && \"#537EF5\" === arr1[0]) return !0;\n    if (!Array.isArray(arr0) || !Array.isArray(arr1) || arr0.length !== arr1.length) return !1;\n    for (let i = 0; i < arr0.length; i++) if (arr0[i] !== arr1[i]) return !1;\n    return !0;\n};\n\nconst fakeRandom = () => {\n    let i = -1;\n    const arr = [ 0, .1, .2, .3, .4, .5, .6, .7, .8, .9 ];\n    return () => (i = (i + 1) % arr.length, arr[i]);\n};\n\nconst isChinese = text => /^[\\u4e00-\\u9fa5]+$/.test(text);\n\nconst calTextLength = (text, textLengthLimit) => {\n    if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(text)) return 0;\n    let length = 0;\n    for (const char of text) isChinese(char) ? length += 1 : length += .53;\n    return length;\n};\n\nfunction loadImage(url) {\n    return url && ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(url) || (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url) || url.startsWith(\"<svg\")) ? new Promise(((resolve, reject) => {\n        var _a;\n        const imageMark = (0,_visactor_vrender_core__WEBPACK_IMPORTED_MODULE_3__.createImage)({\n            image: url\n        }), imgData = null === (_a = imageMark.resources) || void 0 === _a ? void 0 : _a.get(url);\n        imgData && \"success\" === imgData.state && imgData.data ? resolve(imgData.data) : (imageMark.successCallback = () => {\n            var _a;\n            if (imageMark) {\n                const imgData = null === (_a = imageMark.resources) || void 0 === _a ? void 0 : _a.get(url);\n                imgData && \"success\" === imgData.state && imgData.data ? resolve(imgData.data) : reject(new Error(\"image load failed\" + url));\n            } else reject(new Error(\"image load failed\" + url));\n        }, imageMark.failCallback = () => {\n            _visactor_vutils__WEBPACK_IMPORTED_MODULE_4__.Logger.getInstance().error(\"image 加载失败！\", url);\n        });\n    })) : null;\n}\n\nfunction paintLabels(segmentationOutput) {\n    const {size: size, segmentation: {regions: regions, labels: labels}, shapeBounds: shapeBounds, shapeCenter: shapeCenter} = segmentationOutput, paintCanvas = _visactor_vrender_core__WEBPACK_IMPORTED_MODULE_5__.vglobal.createCanvas({\n        width: size[0],\n        height: size[1]\n    }), ctx = paintCanvas.getContext(\"2d\"), colorList = [ \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#00FFFF\", \"#FF00FF\" ];\n    for (let i = 0; i < size[1]; i++) for (let j = 0; j < size[0]; j++) 0 === labels[i * size[0] + j] ? ctx.fillStyle = \"#fff\" : ctx.fillStyle = colorList[labels[i * size[0] + j] % colorList.length], \n    ctx.fillRect(j, i, 1, 1);\n    regions.forEach((region => {\n        const {center: [x, y], area: area, boundary: boundary, maxPoint: maxPoint, label: label} = region;\n        ctx.fillStyle = \"#000\", ctx.fillRect(x, y, 3, 3), ctx.font = \"15px serif\", ctx.fillText(area, x, y);\n        for (const [x, y] of boundary) ctx.fillStyle = \"#f00\", ctx.fillRect(x, y, 1, 1);\n        const [iMin, iMax, jMin, jMax] = maxPoint;\n        ctx.fillStyle = \"#00f\", ctx.font = \"15px serif\", ctx.fillRect(jMin, iMin, 3, 3), \n        ctx.fillText(`${label}_min`, jMin, iMin), ctx.fillRect(jMax, iMax, 3, 3), ctx.fillText(`${label}_max`, jMax, iMax);\n    }));\n    const {x1: x1, y1: y1, width: width, height: height} = shapeBounds;\n    ctx.strokeStyle = \"#000\", ctx.strokeRect(x1, y1, width, height), ctx.fillStyle = \"#000\", \n    ctx.fillRect(shapeCenter[0], shapeCenter[1], 3, 3), ctx.fillText(\"shape center\", shapeCenter[0], shapeCenter[1]), \n    document.body.prepend(paintCanvas);\n}\n\nfunction paint(board, paintSize) {\n    const curSize = paintSize, imageData = new ImageData(curSize[0], curSize[1]), array = imageData.data, w32 = paintSize[0] >> 5;\n    for (let y = 0; y < curSize[1]; y++) for (let x = 0; x < w32; x++) {\n        const string = (board[y * w32 + x] >>> 0).toString(2).padStart(32, \"0\");\n        for (let k = 0; k < 32; k++) \"1\" === string[k] ? (array[4 * ((x << 5) + y * curSize[0] + k) + 0] = 255, \n        array[4 * ((x << 5) + y * curSize[0] + k) + 1] = 255, array[4 * ((x << 5) + y * curSize[0] + k) + 2] = 255, \n        array[4 * ((x << 5) + y * curSize[0] + k) + 3] = 255) : (array[4 * ((x << 5) + y * curSize[0] + k) + 0] = 0, \n        array[4 * ((x << 5) + y * curSize[0] + k) + 1] = 0, array[4 * ((x << 5) + y * curSize[0] + k) + 2] = 0, \n        array[4 * ((x << 5) + y * curSize[0] + k) + 3] = 255), 0 === k && (array[4 * ((x << 5) + y * curSize[0] + k) + 0] = 255, \n        array[4 * ((x << 5) + y * curSize[0] + k) + 1] = 0, array[4 * ((x << 5) + y * curSize[0] + k) + 2] = 0, \n        array[4 * ((x << 5) + y * curSize[0] + k) + 3] = 255);\n    }\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = curSize[0], canvas.height = curSize[1];\n    canvas.getContext(\"2d\").putImageData(imageData, 0, 0), document.body.prepend(canvas);\n}\n\nfunction draw(words, fillingWords, layoutConfig, resizeFactor = 1) {\n    const canvas = document.createElement(\"canvas\"), {size: size} = (Math.PI, layoutConfig);\n    canvas.width = size[0] * resizeFactor, canvas.height = size[1] * resizeFactor;\n    const ctx = canvas.getContext(\"2d\");\n    function drawText(word, color) {\n        ctx.save(), ctx.textAlign = \"center\", ctx.font = word.fontStyle + \" \" + word.fontWeight + \" \" + word.fontSize * resizeFactor + \"px \" + word.fontFamily, \n        ctx.globalAlpha = word.opacity, ctx.translate(word.x * resizeFactor, word.y * resizeFactor), \n        word.rotate && ctx.rotate(word.rotate * Math.PI / 180), ctx.fillText(word.text, 0, .3 * word.fontSize * resizeFactor), \n        ctx.restore();\n    }\n    words.forEach((word => {\n        word.visible && drawText(word);\n    })), fillingWords.forEach((word => {\n        word.visible && drawText(word, \"#308ebc\");\n    })), document.body.prepend(canvas);\n}\n\nfunction drawSpiral(spiral, center, maxR, size) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = size[0], canvas.height = size[1];\n    const ctx = canvas.getContext(\"2d\");\n    let dxdy, dx, dy, t = -1;\n    for (;(dxdy = spiral(t += 1)) && (dx = dxdy[0], dy = dxdy[1], !(Math.min(Math.abs(dx), Math.abs(dy)) >= maxR)); ) ctx.fillStyle = \"#f00\", \n    ctx.fillRect(center[0] + dx, center[1] + dy, 3, 3);\n    document.body.prepend(canvas);\n}\n\nfunction functor(d) {\n    return \"function\" == typeof d ? d : function() {\n        return d;\n    };\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordcloud-shape.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordcloud-shape.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transform: () => (/* binding */ transform)\n/* harmony export */ });\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/common/isNil.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.18.18/node_modules/@visactor/vutils/es/logger.js\");\n/* harmony import */ var _visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visactor/vgrammar-util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-util@0.14.13/node_modules/@visactor/vgrammar-util/es/error.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/util.js\");\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layout */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/layout.js\");\n\n\n\n\n\n\n\n\nconst transform = (options, upstreamData, parameters, view) => {\n    if (!options.size || (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options.size[0]) || (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options.size[1]) || options.size[0] <= 0 || options.size[1] <= 0) {\n        return _visactor_vutils__WEBPACK_IMPORTED_MODULE_1__.Logger.getInstance().info(\"Wordcloud size dimensions must be greater than 0\"), \n        [];\n    }\n    if (options.size = [ Math.ceil(options.size[0]), Math.ceil(options.size[1]) ], options.shape || (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_2__.error)(\"WordcloudShape shape must be specified.\"), \n    options.text || (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_2__.error)(\"WordcloudShape text must be specified.\"), (null == view ? void 0 : view.emit) && view.emit(_util__WEBPACK_IMPORTED_MODULE_3__.WORDCLOUD_SHAPE_HOOK_EVENT.BEFORE_WORDCLOUD_SHAPE_LAYOUT), \n    !upstreamData || 0 === upstreamData.length) return [];\n    const layout = new _layout__WEBPACK_IMPORTED_MODULE_4__.Layout(options, view);\n    return layout.layout(upstreamData), layout.unfinished() ? {\n        progressive: layout\n    } : layout.output();\n};\n//# sourceMappingURL=wordcloud-shape.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXdvcmRjbG91ZC1zaGFwZUAwLjE0LjEzL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlL2VzL3dvcmRjbG91ZC1zaGFwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUQ7O0FBRUQ7O0FBRUk7O0FBRWxCOztBQUUzQjtBQUNQLHlCQUF5Qiw0REFBSyxxQkFBcUIsNERBQUs7QUFDeEQsZUFBZSxvREFBTTtBQUNyQjtBQUNBO0FBQ0Esb0dBQW9HLDhEQUFLO0FBQ3pHLG9CQUFvQiw4REFBSyw2RkFBNkYsNkRBQTBCO0FBQ2hKO0FBQ0EsdUJBQXVCLDJDQUFNO0FBQzdCO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z5bmxhdGljcy1haS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdmlzYWN0b3IrdmdyYW1tYXItd29yZGNsb3VkLXNoYXBlQDAuMTQuMTMvbm9kZV9tb2R1bGVzL0B2aXNhY3Rvci92Z3JhbW1hci13b3JkY2xvdWQtc2hhcGUvZXMvd29yZGNsb3VkLXNoYXBlLmpzPzhhNGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nZ2VyLCBpc05pbCB9IGZyb20gXCJAdmlzYWN0b3IvdnV0aWxzXCI7XG5cbmltcG9ydCB7IGVycm9yIH0gZnJvbSBcIkB2aXNhY3Rvci92Z3JhbW1hci11dGlsXCI7XG5cbmltcG9ydCB7IFdPUkRDTE9VRF9TSEFQRV9IT09LX0VWRU5UIH0gZnJvbSBcIi4vdXRpbFwiO1xuXG5pbXBvcnQgeyBMYXlvdXQgfSBmcm9tIFwiLi9sYXlvdXRcIjtcblxuZXhwb3J0IGNvbnN0IHRyYW5zZm9ybSA9IChvcHRpb25zLCB1cHN0cmVhbURhdGEsIHBhcmFtZXRlcnMsIHZpZXcpID0+IHtcbiAgICBpZiAoIW9wdGlvbnMuc2l6ZSB8fCBpc05pbChvcHRpb25zLnNpemVbMF0pIHx8IGlzTmlsKG9wdGlvbnMuc2l6ZVsxXSkgfHwgb3B0aW9ucy5zaXplWzBdIDw9IDAgfHwgb3B0aW9ucy5zaXplWzFdIDw9IDApIHtcbiAgICAgICAgcmV0dXJuIExvZ2dlci5nZXRJbnN0YW5jZSgpLmluZm8oXCJXb3JkY2xvdWQgc2l6ZSBkaW1lbnNpb25zIG11c3QgYmUgZ3JlYXRlciB0aGFuIDBcIiksIFxuICAgICAgICBbXTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuc2l6ZSA9IFsgTWF0aC5jZWlsKG9wdGlvbnMuc2l6ZVswXSksIE1hdGguY2VpbChvcHRpb25zLnNpemVbMV0pIF0sIG9wdGlvbnMuc2hhcGUgfHwgZXJyb3IoXCJXb3JkY2xvdWRTaGFwZSBzaGFwZSBtdXN0IGJlIHNwZWNpZmllZC5cIiksIFxuICAgIG9wdGlvbnMudGV4dCB8fCBlcnJvcihcIldvcmRjbG91ZFNoYXBlIHRleHQgbXVzdCBiZSBzcGVjaWZpZWQuXCIpLCAobnVsbCA9PSB2aWV3ID8gdm9pZCAwIDogdmlldy5lbWl0KSAmJiB2aWV3LmVtaXQoV09SRENMT1VEX1NIQVBFX0hPT0tfRVZFTlQuQkVGT1JFX1dPUkRDTE9VRF9TSEFQRV9MQVlPVVQpLCBcbiAgICAhdXBzdHJlYW1EYXRhIHx8IDAgPT09IHVwc3RyZWFtRGF0YS5sZW5ndGgpIHJldHVybiBbXTtcbiAgICBjb25zdCBsYXlvdXQgPSBuZXcgTGF5b3V0KG9wdGlvbnMsIHZpZXcpO1xuICAgIHJldHVybiBsYXlvdXQubGF5b3V0KHVwc3RyZWFtRGF0YSksIGxheW91dC51bmZpbmlzaGVkKCkgPyB7XG4gICAgICAgIHByb2dyZXNzaXZlOiBsYXlvdXRcbiAgICB9IDogbGF5b3V0Lm91dHB1dCgpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdvcmRjbG91ZC1zaGFwZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordcloud-shape.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordle.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordle.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCollideWithBoard: () => (/* binding */ isCollideWithBoard),\n/* harmony export */   layout: () => (/* binding */ layout),\n/* harmony export */   layoutGlobalShrink: () => (/* binding */ layoutGlobalShrink),\n/* harmony export */   layoutSelfEnlarge: () => (/* binding */ layoutSelfEnlarge),\n/* harmony export */   layoutSelfShrink: () => (/* binding */ layoutSelfShrink),\n/* harmony export */   measureSprite: () => (/* binding */ measureSprite),\n/* harmony export */   placeWordOnBoard: () => (/* binding */ placeWordOnBoard)\n/* harmony export */ });\nfunction layout(words, layoutConfig, segmentationOutput) {\n    const {size: size, stepFactor: stepFactor} = layoutConfig, {segmentation: {regions: regions}, tempCanvas: canvas, boardSize: boardSize, shapeCenter: shapeCenter, shapeMaxR: shapeMaxR, shapeRatio: shapeRatio} = segmentationOutput, board = initBoardWithShape(segmentationOutput), ctx = canvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    });\n    for (const region of regions) {\n        const {words: regionWords, center: center, maxR: maxR, ratio: ratio} = region;\n        for (let i = 0; i < regionWords.length; i++) {\n            measureSprite(canvas, ctx, words, i);\n            const word = regionWords[i];\n            word.x = center[0], word.y = center[1], word.hasText && word.sprite && place(board, word, maxR, ratio, size, boardSize, stepFactor) && (word.hasPlaced = !0);\n        }\n    }\n    for (let _ = 0; _ < layoutConfig.textLayoutTimes; _++) {\n        const failedWords = words.filter((word => (word.hasPlaced || (word.hasText = !1, \n        word.sprite = null, word.fontSize = Math.max(~~(word.fontSize * layoutConfig.fontSizeShrinkFactor), layoutConfig.minFontSize)), \n        !word.hasPlaced)));\n        if (0 === failedWords.length) break;\n        for (let i = 0; i < failedWords.length; i++) {\n            const word = failedWords[i];\n            measureSprite(canvas, ctx, failedWords, i), word.x = shapeCenter[0], word.y = shapeCenter[1], \n            word.hasText && place(board, word, shapeMaxR, shapeRatio, size, boardSize, stepFactor) && (word.hasPlaced = !0);\n        }\n    }\n    layoutConfig.board = board;\n}\n\nfunction layoutSelfShrink(words, layoutConfig, segmentationOutput) {\n    const {size: size, stepFactor: stepFactor} = layoutConfig, {segmentation: {regions: regions}, tempCanvas: canvas, boardSize: boardSize} = segmentationOutput, board = initBoardWithShape(segmentationOutput), ctx = canvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    });\n    for (const region of regions) {\n        const {words: regionWords, center: center, maxR: maxR, ratio: ratio} = region;\n        let fontFactor = 1;\n        for (let i = 0; i < regionWords.length; i++) {\n            measureSprite(canvas, ctx, words, i);\n            const word = regionWords[i];\n            if (word.x = center[0], word.y = center[1], word.hasText && word.sprite && place(board, word, maxR, ratio, size, boardSize, stepFactor)) word.hasPlaced = !0; else {\n                fontFactor *= layoutConfig.fontSizeShrinkFactor;\n                for (let j = i; j < regionWords.length; j++) word.hasText = !1, word.sprite = null, \n                word.fontSize = Math.max(~~(word.fontSize * fontFactor), layoutConfig.minFontSize);\n                i--;\n            }\n        }\n    }\n    layoutConfig.board = board;\n}\n\nfunction layoutGlobalShrink(words, layoutConfig, segmentationOutput) {\n    const {stepFactor: stepFactor, importantWordCount: importantWordCount, globalShinkLimit: globalShinkLimit} = layoutConfig, {size: size, segmentation: {regions: regions}, tempCanvas: canvas, boardSize: boardSize, shapeCenter: shapeCenter, shapeMaxR: shapeMaxR, shapeRatio: shapeRatio} = segmentationOutput, ctx = canvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    }), boardOrigin = initBoardWithShape(segmentationOutput);\n    let board = boardOrigin.slice(0);\n    const fontFactor = layoutConfig.fontSizeShrinkFactor;\n    let id = null, idIntialFactor = 1, globalShinkFactor = 1;\n    const importantCount = importantWordCount;\n    let weightStd = 0;\n    if (words.length > importantCount) {\n        weightStd = words.sort(((word0, word1) => word1.weight - word0.weight))[importantCount].weight;\n    }\n    for (let k = 0; k < regions.length; k++) {\n        const region = regions[k], {words: regionWords, center: center, maxR: maxR, ratio: ratio} = region;\n        let restartTag = !1;\n        for (let i = 0; i < regionWords.length; i++) {\n            measureSprite(canvas, ctx, words, i);\n            const word = regionWords[i];\n            if (word.x = center[0], word.y = center[1], !word.skip && word.hasText && word.sprite && place(board, word, maxR, ratio, size, boardSize, stepFactor)) word.hasPlaced = !0; else {\n                if (!word.skip && word.weight > weightStd && globalShinkFactor > globalShinkLimit) {\n                    const wordId = word.datum[Symbol.for(\"vGrammar_id\")];\n                    wordId !== id && (id = wordId, idIntialFactor = globalShinkFactor), globalShinkFactor *= fontFactor, \n                    words.forEach((word => {\n                        word.hasText = !1, word.sprite = null, word.fontSize = word.fontSize * fontFactor;\n                    })), board = boardOrigin.slice(0), restartTag = !0;\n                    break;\n                }\n                if (!word.skip && word.datum[Symbol.for(\"vGrammar_id\")] === id) {\n                    words.forEach((word => {\n                        word.hasText = !1, word.sprite = null, word.fontSize = word.fontSize / globalShinkFactor;\n                    })), word.skip = !0, globalShinkFactor = idIntialFactor, id = null, board = boardOrigin.slice(0), \n                    restartTag = !0;\n                    break;\n                }\n            }\n        }\n        restartTag && (k = -1);\n    }\n    for (let _ = 0; _ < layoutConfig.textLayoutTimes; _++) {\n        const failedWords = words.filter((word => (word.hasPlaced || (word.hasText = !1, \n        word.sprite = null, word.fontSize = Math.max(~~(word.fontSize * layoutConfig.fontSizeShrinkFactor), layoutConfig.minFontSize)), \n        !word.hasPlaced)));\n        if (0 === failedWords.length) break;\n        for (let i = 0; i < failedWords.length; i++) {\n            const word = failedWords[i];\n            measureSprite(canvas, ctx, failedWords, i), word.x = shapeCenter[0], word.y = shapeCenter[1], \n            word.hasText && place(board, word, shapeMaxR, shapeRatio, size, boardSize, stepFactor) && (word.hasPlaced = !0);\n        }\n    }\n    layoutConfig.board = board;\n}\n\nfunction layoutSelfEnlarge(words, layoutConfig, segmentationOutput) {\n    const {size: size, stepFactor: stepFactor, importantWordCount: importantWordCount} = layoutConfig, {segmentation: {regions: regions}, tempCanvas: canvas, boardSize: boardSize, shapeCenter: shapeCenter, shapeMaxR: shapeMaxR, shapeRatio: shapeRatio} = segmentationOutput, ctx = canvas.getContext(\"2d\", {\n        willReadFrequently: !0\n    }), boardOrigin = initBoardWithShape(segmentationOutput);\n    let board = boardOrigin.slice(0);\n    const fontFactor = layoutConfig.fontSizeEnlargeFactor, importantCount = Math.min(importantWordCount, words.length);\n    let weightStd = 0;\n    if (words.length > importantCount) {\n        weightStd = words.sort(((word0, word1) => word1.weight - word0.weight))[importantCount - 1].weight;\n    }\n    let importantWordSuccessedNum = 0, globalEnlargeFactor = 1, layoutFinish = !1;\n    for (let k = 0; k < regions.length; k++) {\n        const region = regions[k], {words: regionWords, center: center, maxR: maxR, ratio: ratio} = region;\n        let restartTag = !1;\n        for (let i = 0; i < regionWords.length; i++) {\n            measureSprite(canvas, ctx, words, i);\n            const word = regionWords[i];\n            if (word.x = center[0], word.y = center[1], word.hasText && word.sprite && place(board, word, maxR, ratio, size, boardSize, stepFactor)) {\n                if (word.hasPlaced = !0, word.weight >= weightStd && importantWordSuccessedNum++, \n                importantWordSuccessedNum >= importantCount && !layoutFinish) {\n                    globalEnlargeFactor *= fontFactor, words.forEach((word => {\n                        word.hasText = !1, word.sprite = null, word.fontSize = word.fontSize * fontFactor;\n                    })), board = boardOrigin.slice(0), restartTag = !0, importantWordSuccessedNum = 0;\n                    break;\n                }\n            } else {\n                if (word.weight >= weightStd && globalEnlargeFactor > 1) {\n                    words.forEach((word => {\n                        word.hasText = !1, word.sprite = null, word.fontSize = word.fontSize / fontFactor;\n                    })), globalEnlargeFactor /= fontFactor, layoutFinish = !0, board = boardOrigin.slice(0), \n                    restartTag = !0;\n                    break;\n                }\n                if (word.weight >= weightStd) return layoutGlobalShrink(words, layoutConfig, segmentationOutput);\n            }\n        }\n        restartTag && (k = -1);\n    }\n    for (let _ = 0; _ < layoutConfig.textLayoutTimes; _++) {\n        const failedWords = words.filter((word => (word.hasPlaced || (word.hasText = !1, \n        word.sprite = null, word.fontSize = Math.max(~~(word.fontSize * layoutConfig.fontSizeShrinkFactor), layoutConfig.minFontSize)), \n        !word.hasPlaced)));\n        if (0 === failedWords.length) break;\n        for (let i = 0; i < failedWords.length; i++) {\n            const word = failedWords[i];\n            measureSprite(canvas, ctx, failedWords, i), word.x = shapeCenter[0], word.y = shapeCenter[1], \n            word.hasText && place(board, word, shapeMaxR, shapeRatio, size, boardSize, stepFactor) && (word.hasPlaced = !0);\n        }\n    }\n    layoutConfig.board = board;\n}\n\nfunction place(board, word, maxR, ratio, size, boardSize, stepFactor) {\n    const startX = word.x, startY = word.y, spiral = archimedeanSpiral(ratio), dt = 1 * stepFactor;\n    let dxdy, dx, dy, t = -dt;\n    for (;dxdy = spiral(t += dt); ) {\n        const {wordSize: wordSize, bounds: {dTop: dTop, dBottom: dBottom, dLeft: dLeft, dRight: dRight}} = word;\n        if (dx = dxdy[0], dy = dxdy[1], Math.min(Math.abs(dx), Math.abs(dy)) >= maxR) break;\n        if (word.x = ~~(startX + dx), word.y = ~~(startY + dy), !(word.x - dLeft < 0 || word.x + dRight > size[0] || word.y - dTop < 0 || word.y + dBottom > size[1] || isCollideWithBoard(word, board, boardSize))) return placeWordOnBoard(word, board, boardSize), \n        !0;\n    }\n    return !1;\n}\n\nfunction placeWordOnBoard(word, board, boardSize) {\n    const {wordSize: wordSize} = word, sprite = word.sprite, w = wordSize[0] >> 5, sw = boardSize[0] >> 5, lx = word.x - (w << 4), sx = lx % 32, msx = 32 - sx, h = wordSize[1];\n    let last, x = (word.y - (wordSize[1] >> 1)) * sw + (lx >> 5);\n    if (0 === sx) for (let j = 0; j < h; j++) {\n        for (let i = 0; i < w; i++) board[x + i] |= sprite[j * w + i];\n        x += sw;\n    } else for (let j = 0; j < h; j++) {\n        last = 0;\n        for (let i = 0; i <= w; i++) board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n        x += sw;\n    }\n}\n\nfunction isCollideWithBoard(word, board, boardSize) {\n    const {sprite: sprite, wordSize: wordSize} = word, sw = boardSize[0] >> 5, w = wordSize[0] >> 5, lx = word.x - (w << 4), sx = lx % 32, msx = 32 - sx, h = wordSize[1];\n    let last, x = (word.y - (wordSize[1] >> 1)) * sw + (lx >> 5);\n    if (0 === sx) for (let j = 0; j < h; j++) {\n        for (let i = 0; i < w; i++) if (board[x + i] & sprite[j * w + i]) return !0;\n        x += sw;\n    } else for (let j = 0; j < h; j++) {\n        last = 0;\n        for (let i = 0; i <= w; i++) if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return !0;\n        x += sw;\n    }\n    return !1;\n}\n\nfunction archimedeanSpiral(ratio) {\n    return function(t) {\n        return [ ratio * (t *= .1) * Math.cos(t), t * Math.sin(t) ];\n    };\n}\n\nfunction measureSprite(canvas, ctx, words, wi) {\n    if (words[wi].sprite || 0 === words[wi].fontSize) return;\n    const cw = 2048, radians = Math.PI / 180, n = words.length;\n    canvas.width = cw, canvas.height = 2048, ctx.clearRect(0, 0, cw, 2048), ctx.textAlign = \"center\";\n    let wordW, wordH, x = 0, y = 0, maxHeight = 0, yMax = 0;\n    const wiDist = wi;\n    for (--wi; ++wi < n; ) {\n        const word = words[wi], fontSize = Math.max(word.fontSize, 2);\n        if (ctx.save(), ctx.font = word.fontStyle + \" \" + word.fontWeight + \" \" + fontSize + \"px \" + word.fontFamily, \n        wordW = ctx.measureText(word.text + \"m\").width + 2 * word.padding, wordH = 2 * fontSize + 2 * word.padding, \n        0 !== word.rotate) {\n            const sr = Math.sin(word.rotate * radians), cr = Math.cos(word.rotate * radians), wcr = wordW * cr, wsr = wordW * sr, hcr = wordH * cr, hsr = wordH * sr;\n            wordW = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)), wordH = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n        }\n        if (wordW = wordW + 31 >> 5 << 5, wordH = Math.ceil(wordH), wordH > maxHeight && (maxHeight = wordH), \n        x + wordW >= cw && (x = 0, y += maxHeight, maxHeight = wordH), y + wordH >= 2048) {\n            if (0 === y) {\n                word.hasText = !1;\n                continue;\n            }\n            break;\n        }\n        y + wordH >= yMax && (yMax = y + wordH), ctx.translate(x + (wordW >> 1), y + (wordH >> 1)), \n        0 !== word.rotate && ctx.rotate(word.rotate * radians), ctx.fillText(word.text, 0, 0), \n        word.padding && (ctx.lineWidth = 2 * word.padding, ctx.strokeText(word.text, 0, 0)), \n        ctx.restore(), word.LT = [ x, y ], word.wordSize = [ wordW, wordH ], word.hasText = !0, \n        x += wordW;\n    }\n    if (0 === yMax) return;\n    const pixels = ctx.getImageData(0, 0, cw, yMax).data;\n    let i, j;\n    for (;--wi >= wiDist; ) {\n        const word = words[wi];\n        if (!word.hasText) {\n            word.bounds = {\n                dTop: 1 / 0,\n                dBottom: -1 / 0,\n                dLeft: 1 / 0,\n                dRight: -1 / 0\n            };\n            break;\n        }\n        const {LT: LT = [ 0, 0 ], wordSize: wordSize} = word;\n        [x, y] = LT;\n        const w32 = wordSize[0] >> 5, sprite = new Array(w32 * wordSize[1]).fill(0);\n        let [dTop, dBottom, dLeft, dRight] = [ 1 / 0, -1 / 0, 1 / 0, -1 / 0 ];\n        for (j = 0; j < wordSize[1]; j++) {\n            let seen;\n            for (i = 0; i < wordSize[0]; i++) if (pixels[4 * ((y + j) * cw + (x + i)) + 3] > 0) {\n                const m = 1 << 31 - i % 32;\n                sprite[w32 * j + (i >> 5)] |= m, i < dLeft && (dLeft = i), i > dRight && (dRight = i), \n                seen |= m;\n            }\n            seen && (j < dTop && (dTop = j), j > dBottom && (dBottom = j));\n        }\n        word.bounds = {\n            dTop: (wordSize[1] >> 1) - dTop,\n            dBottom: dBottom - (wordSize[1] >> 1),\n            dLeft: (wordSize[0] >> 1) - dLeft,\n            dRight: dRight - (wordSize[0] >> 1)\n        }, word.sprite = sprite, delete word.LT;\n    }\n}\n\nfunction initBoardWithShape(segmentationOutput) {\n    const {segmentation: {labels: labels}, boardSize: boardSize, size: size} = segmentationOutput, w32 = boardSize[0] >> 5, board = new Array(w32 * size[1]).fill(0);\n    for (let i = 0; i < size[1]; i++) for (let j = 0; j < size[0]; j++) {\n        if (0 === labels[i * size[0] + j]) {\n            const m = 1 << 31 - j % 32;\n            board[w32 * i + (j >> 5)] |= m;\n        }\n    }\n    if (boardSize[0] > size[0]) {\n        const m = (1 << boardSize[0] - size[0]) - 1;\n        for (let y = 0; y < size[1]; y++) {\n            board[w32 * y + w32 - 1] |= m;\n        }\n    }\n    return board;\n}\n//# sourceMappingURL=wordle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-wordcloud-shape@0.14.13/node_modules/@visactor/vgrammar-wordcloud-shape/es/wordle.js\n");

/***/ })

};
;